Detection of plagiarism in students' source codes in college-level programming courses is an important topic for instructors and institutions that seek to pursue project-based learning while enforcing honor codes and maintaining traditional grade-based skill assessment methods. There are different approaches for plagiarism detection currently being researched. This paper aims to answer the question: What does the literature report on source code plagiarism detection in university settings? To answer that, we used a systematic mapping process of recent literature. We selected 109 papers published between 2015 and 2020 that deal with this subject specifically in an educational context. We found that this research area is currently expanding and being studied worldwide. There were papers from 37 different countries, and the number of publications per year has been increasing since 2017. The most targeted programming languages are Java, C++, C, and Python. The most studied plagiarism detection tools are MOSS, JPlag, SIM, Plaggie, and Sherlock. Our study also identified new methodologies created to tackle this problem, such as the analysis of students' typing patterns or their coding style. We noticed that the proposed solutions are mainly based on static source code analysis instead of following the development process. This paper describes our findings.